class Item:
    def __init__(self, weight, value):
        self.weight = weight
        self.value = value
        self.cost = value / weight

def fractional_knapsack(weights, values, max_weight):
    items = [Item(weights[i], values[i]) for i in range(len(weights))]
    items.sort(key=lambda x: x.cost, reverse=True)

    total_value = 0
    for item in items:
        if max_weight >= item.weight:
            max_weight -= item.weight
            total_value += item.value
        else:
            total_value += item.value * (max_weight / item.weight)
            break

    return total_value

# Input and Execution
weights = list(map(float, input("Enter weights: ").split()))
values = list(map(float, input("Enter values: ").split()))
max_weight = float(input("Enter maximum weight of the knapsack: "))
max_value = fractional_knapsack(weights, values, max_weight)
print("Maximum value in knapsack:", max_value)
